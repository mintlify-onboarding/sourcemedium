{
  "openapi": "3.0.2",
  "info": {
    "title": "Functions",
    "version": "2021-11-16",
    "description": "Stedi Functions lets you run code without provisioning or managing servers.",
    "contact": {
      "email": "cloud@stedi.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://stedi.com"
    }
  },
  "paths": {
    "/data-plane-access": {
      "get": {
        "description": "Get caller's mapped AWS Account ID",
        "operationId": "GetDataPlaneAccess",
        "responses": {
          "200": {
            "description": "GetDataPlaneAccess 200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDataPlaneAccessResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ValidationException 400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "UnmappedException 403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnmappedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "UnknownOperationException 404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownOperationExceptionResponseContent"
                }
              }
            }
          },
          "406": {
            "description": "NotAcceptableException 406 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptableExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "RequestTooLargeException 413 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTooLargeExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalFailureException 500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        },
        "x-stedi-public": false
      },
      "options": {
        "description": "Handles CORS-preflight requests",
        "operationId": "CorsData_plane_access",
        "responses": {
          "200": {
            "description": "Canned response for CORS-preflight requests",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [],
        "tags": ["CORS"],
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "requestTemplates": {
            "application/json": "{\"statusCode\":200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Max-Age": "'600'",
                "method.response.header.Access-Control-Allow-Headers": "'Amz-Sdk-Invocation-Id,Amz-Sdk-Request,Authorization,Content-Type,Stedi-Agent,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock",
          "passthroughBehavior": "when_no_match"
        }
      }
    },
    "/functions": {
      "get": {
        "description": "Retrieve a list containing every function.",
        "operationId": "ListFunctions",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of elements to return in a page",
            "schema": {
              "type": "number",
              "minimum": 1,
              "description": "The maximum number of elements to return in a page"
            }
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "The token used for pagination",
            "schema": {
              "type": "string",
              "maxLength": 200,
              "minLength": 1,
              "description": "The token used for pagination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ListFunctions 200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListFunctionsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ValidationException 400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "UnmappedException 403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnmappedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "UnknownOperationException 404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownOperationExceptionResponseContent"
                }
              }
            }
          },
          "406": {
            "description": "NotAcceptableException 406 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptableExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "RequestTooLargeException 413 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTooLargeExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalFailureException 500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        },
        "x-stedi-public": true
      },
      "options": {
        "description": "Handles CORS-preflight requests",
        "operationId": "CorsFunctions",
        "responses": {
          "200": {
            "description": "Canned response for CORS-preflight requests",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [],
        "tags": ["CORS"],
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "requestTemplates": {
            "application/json": "{\"statusCode\":200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Max-Age": "'600'",
                "method.response.header.Access-Control-Allow-Headers": "'Amz-Sdk-Invocation-Id,Amz-Sdk-Request,Authorization,Content-Length,Content-Type,Prefer,Stedi-Agent,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,GET'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock",
          "passthroughBehavior": "when_no_match"
        }
      },
      "post": {
        "description": "Create a new function.",
        "operationId": "CreateFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFunctionRequestContent"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "Prefer",
            "in": "header",
            "description": "[EXPERIMENTAL FEATURE] The operation preference for asynchronous responses based on RFC 7240: https://datatracker.ietf.org/doc/html/rfc7240",
            "schema": {
              "$ref": "#/components/schemas/OperationPreferences"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CreateFunction 201 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Stedi-OperationToken": {
                "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                "schema": {
                  "type": "string",
                  "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                  "deprecated": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFunctionResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ValidationException 400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "UnmappedException 403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnmappedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "UnknownOperationException 404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownOperationExceptionResponseContent"
                }
              }
            }
          },
          "406": {
            "description": "NotAcceptableException 406 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptableExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "RequestTooLargeException 413 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTooLargeExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalFailureException 500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        },
        "x-stedi-public": true
      }
    },
    "/functions/{functionName}": {
      "delete": {
        "description": "Delete an existing function.",
        "operationId": "DeleteFunction",
        "parameters": [
          {
            "name": "functionName",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9-_]+)$"
            },
            "required": true
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "[EXPERIMENTAL FEATURE] The operation preference for asynchronous responses based on RFC 7240: https://datatracker.ietf.org/doc/html/rfc7240",
            "schema": {
              "$ref": "#/components/schemas/OperationPreferences"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "DeleteFunction 204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Stedi-OperationToken": {
                "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                "schema": {
                  "type": "string",
                  "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                  "deprecated": true
                }
              }
            }
          },
          "400": {
            "description": "ValidationException 400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "UnmappedException 403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnmappedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "UnknownOperationException 404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownOperationExceptionResponseContent"
                }
              }
            }
          },
          "406": {
            "description": "NotAcceptableException 406 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptableExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "RequestTooLargeException 413 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTooLargeExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalFailureException 500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        },
        "x-stedi-public": true
      },
      "get": {
        "description": "Retrieve an existing function.",
        "operationId": "ReadFunction",
        "parameters": [
          {
            "name": "functionName",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9-_]+)$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ReadFunction 200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Stedi-OperationToken": {
                "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                "schema": {
                  "type": "string",
                  "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                  "deprecated": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadFunctionResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ValidationException 400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "UnmappedException 403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnmappedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "UnknownOperationException 404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownOperationExceptionResponseContent"
                }
              }
            }
          },
          "406": {
            "description": "NotAcceptableException 406 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptableExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "RequestTooLargeException 413 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTooLargeExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalFailureException 500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        },
        "x-stedi-public": true
      },
      "options": {
        "description": "Handles CORS-preflight requests",
        "operationId": "CorsFunctionsFunctionname",
        "parameters": [
          {
            "name": "functionName",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9-_]+)$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Canned response for CORS-preflight requests",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [],
        "tags": ["CORS"],
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "requestTemplates": {
            "application/json": "{\"statusCode\":200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Max-Age": "'600'",
                "method.response.header.Access-Control-Allow-Headers": "'Amz-Sdk-Invocation-Id,Amz-Sdk-Request,Authorization,Content-Length,Content-Type,Prefer,Stedi-Agent,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,PUT'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock",
          "passthroughBehavior": "when_no_match"
        }
      },
      "put": {
        "description": "Update an existing function.",
        "operationId": "UpdateFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFunctionRequestContent"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "functionName",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9-_]+)$"
            },
            "required": true
          },
          {
            "name": "Prefer",
            "in": "header",
            "description": "[EXPERIMENTAL FEATURE] The operation preference for asynchronous responses based on RFC 7240: https://datatracker.ietf.org/doc/html/rfc7240",
            "schema": {
              "$ref": "#/components/schemas/OperationPreferences"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "UpdateFunction 200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Stedi-OperationToken": {
                "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                "schema": {
                  "type": "string",
                  "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                  "deprecated": true
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFunctionResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ValidationException 400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "UnmappedException 403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnmappedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "UnknownOperationException 404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownOperationExceptionResponseContent"
                }
              }
            }
          },
          "406": {
            "description": "NotAcceptableException 406 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptableExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "RequestTooLargeException 413 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTooLargeExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalFailureException 500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        },
        "x-stedi-public": true
      }
    },
    "/functions/{functionName}/invocations": {
      "options": {
        "description": "Handles CORS-preflight requests",
        "operationId": "CorsFunctionsFunctionnameInvocations",
        "parameters": [
          {
            "name": "functionName",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9-_]+)$"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Canned response for CORS-preflight requests",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Max-Age": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [],
        "tags": ["CORS"],
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "requestTemplates": {
            "application/json": "{\"statusCode\":200}",
            "application/octet-stream": "{\"statusCode\":200}"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Max-Age": "'600'",
                "method.response.header.Access-Control-Allow-Headers": "'Amz-Sdk-Invocation-Id,Amz-Sdk-Request,Authorization,Content-Length,Content-Type,Stedi-Agent,X-Amz-Invocation-Type,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'POST'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock",
          "passthroughBehavior": "when_no_match"
        }
      },
      "post": {
        "description": "Invoke function.",
        "operationId": "InvokeFunction",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InvokeFunctionInputPayload"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "functionName",
            "in": "path",
            "schema": {
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9-_]+)$"
            },
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Amz-Invocation-Type",
            "in": "header",
            "description": "Specify 'Event' for asynchronous invocation. The default invocation type is 'RequestResponse' (or synchronous)\nAsynchronous invocations can have a request body payload up to 256KB.",
            "schema": {
              "$ref": "#/components/schemas/InvocationType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InvokeFunction 200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "X-Stedi-FunctionName": {
                "schema": {
                  "type": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "pattern": "^([a-zA-Z0-9-_]+)$"
                },
                "required": true
              },
              "X-Stedi-InvocationError": {
                "description": "If present, indicates that an error occurred during invocation. Details about the error are included in the response payload.",
                "schema": {
                  "type": "string",
                  "description": "If present, indicates that an error occurred during invocation. Details about the error are included in the response payload."
                }
              },
              "X-Stedi-InvocationId": {
                "description": "The identifier for a given function invocation.",
                "schema": {
                  "type": "string",
                  "description": "The identifier for a given function invocation."
                },
                "required": true
              },
              "X-Stedi-InvocationLogs": {
                "description": "The last 4 KB of the invocation log, which is base64 encoded.",
                "schema": {
                  "type": "string",
                  "description": "The last 4 KB of the invocation log, which is base64 encoded."
                }
              },
              "X-Stedi-OperationToken": {
                "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                "schema": {
                  "type": "string",
                  "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
                  "deprecated": true
                }
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/InvokeFunctionOutputPayload"
                }
              }
            }
          },
          "400": {
            "description": "ValidationException 400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "UnmappedException 403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnmappedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "UnknownOperationException 404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownOperationExceptionResponseContent"
                }
              }
            }
          },
          "406": {
            "description": "NotAcceptableException 406 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotAcceptableExceptionResponseContent"
                }
              }
            }
          },
          "409": {
            "description": "ResourceConflictException 409 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceConflictExceptionResponseContent"
                }
              }
            }
          },
          "413": {
            "description": "RequestTooLargeException 413 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTooLargeExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "ThrottlingException 429 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalFailureException 500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalFailureExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "504": {
            "description": "GatewayTimeoutException 504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Expose-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayTimeoutExceptionResponseContent"
                }
              }
            }
          }
        },
        "x-stedi-public": true
      }
    }
  },
  "components": {
    "schemas": {
      "CreateFunctionRequestContent": {
        "type": "object",
        "properties": {
          "functionName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9-_]+)$"
          },
          "code": {
            "type": "string"
          },
          "package": {
            "type": "string",
            "maxLength": 3407872,
            "minLength": 1,
            "description": "The function code that has been packaged. Write-only. Limited to 3.25MB.",
            "format": "byte"
          },
          "packageRef": {
            "$ref": "#/components/schemas/PackageReference"
          },
          "timeout": {
            "type": "number",
            "maximum": 900,
            "minimum": 1,
            "description": "The amount of time (in seconds) that the runtime allows a function to run before stopping it. The default is 3 seconds."
          },
          "environmentVariables": {
            "$ref": "#/components/schemas/EnvironmentVariables"
          },
          "logRetention": {
            "$ref": "#/components/schemas/LogRetention"
          }
        },
        "required": ["functionName"]
      },
      "CreateFunctionResponseContent": {
        "type": "object",
        "properties": {
          "functionName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9-_]+)$"
          },
          "code": {
            "type": "string"
          },
          "environmentVariables": {
            "$ref": "#/components/schemas/EnvironmentVariables"
          },
          "timeout": {
            "type": "number",
            "maximum": 900,
            "minimum": 1,
            "description": "The amount of time (in seconds) that the runtime allows a function to run before stopping it. The default is 3 seconds."
          },
          "logRetention": {
            "$ref": "#/components/schemas/LogRetention"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the resource was created."
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the resource was updated."
          }
        },
        "required": ["functionName"]
      },
      "EnvironmentVariables": {
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "format": "password"
        },
        "format": "password"
      },
      "FunctionOutput": {
        "type": "object",
        "properties": {
          "functionName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9-_]+)$"
          },
          "code": {
            "type": "string"
          },
          "environmentVariables": {
            "$ref": "#/components/schemas/EnvironmentVariables"
          },
          "timeout": {
            "type": "number",
            "maximum": 900,
            "minimum": 1,
            "description": "The amount of time (in seconds) that the runtime allows a function to run before stopping it. The default is 3 seconds."
          },
          "logRetention": {
            "$ref": "#/components/schemas/LogRetention"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the resource was created."
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the resource was updated."
          },
          "operationStatusCode": {
            "type": "number",
            "description": "[EXPERIMENTAL FEATURE] The HTTP status code is in the 200 range for a successful request. For the Synchronous operation type, this status code is 200/201. For the Asynchronous operation type, this status code is 202."
          },
          "operationToken": {
            "type": "string",
            "description": "[EXPERIMENTAL FEATURE] The token returned so that the user can check the status of an asynchronous operation.",
            "deprecated": true
          }
        },
        "required": ["functionName"]
      },
      "GatewayTimeoutExceptionResponseContent": {
        "type": "object",
        "description": "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "GetDataPlaneAccessResponseContent": {
        "type": "object",
        "properties": {
          "awsAccountId": {
            "type": "string"
          },
          "webIdentityToken": {
            "type": "string"
          }
        }
      },
      "InternalFailureExceptionResponseContent": {
        "type": "object",
        "description": "The server response when an unexpected error occurred while processing request.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "InvocationType": {
        "type": "string",
        "enum": ["RequestResponse", "Event"]
      },
      "InvokeFunctionInputPayload": {
        "type": "string",
        "description": "The input data that you want to provide during execution.",
        "format": "byte"
      },
      "InvokeFunctionOutputPayload": {
        "type": "string",
        "description": "The response from the execution, or an error object.",
        "format": "byte"
      },
      "ListFunctionsResponseContent": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunctionOutput"
            }
          },
          "nextPageToken": {
            "type": "string",
            "maxLength": 200,
            "minLength": 1,
            "description": "The token used for pagination"
          }
        }
      },
      "LogRetention": {
        "type": "string",
        "description": "How long the log events will be retained.",
        "enum": [
          "one_day",
          "three_days",
          "five_days",
          "one_week",
          "two_weeks",
          "one_month",
          "two_months",
          "three_months",
          "four_months",
          "five_months",
          "six_months",
          "one_year",
          "thirteen_months",
          "eighteen_months",
          "two_years",
          "five_years",
          "ten_years"
        ]
      },
      "NotAcceptableExceptionResponseContent": {
        "type": "object",
        "description": "The server response when the requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "OperationPreferences": {
        "type": "string",
        "description": "[EXPERIMENTAL FEATURE] The operation preference for asynchronous responses based on RFC 7240: https://datatracker.ietf.org/doc/html/rfc7240",
        "enum": ["respond-async"]
      },
      "PackageReference": {
        "type": "object",
        "description": "A reference to a Bucket object containing a function package.",
        "properties": {
          "bucketName": {
            "type": "string",
            "description": "The name of the package."
          },
          "key": {
            "type": "string",
            "description": "The version of the package."
          }
        },
        "required": ["bucketName", "key"]
      },
      "ReadFunctionResponseContent": {
        "type": "object",
        "properties": {
          "functionName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9-_]+)$"
          },
          "code": {
            "type": "string"
          },
          "environmentVariables": {
            "$ref": "#/components/schemas/EnvironmentVariables"
          },
          "timeout": {
            "type": "number",
            "maximum": 900,
            "minimum": 1,
            "description": "The amount of time (in seconds) that the runtime allows a function to run before stopping it. The default is 3 seconds."
          },
          "logRetention": {
            "$ref": "#/components/schemas/LogRetention"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the resource was created."
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the resource was updated."
          }
        },
        "required": ["functionName"]
      },
      "RequestTooLargeExceptionResponseContent": {
        "type": "object",
        "description": "The server response for the request too large error.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "ResourceConflictExceptionResponseContent": {
        "type": "object",
        "description": "The server could not process the request because of conflict in the current state of the resource.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "ServiceUnavailableExceptionResponseContent": {
        "type": "object",
        "description": "The server cannot handle the request due to technical reasons.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "ThrottlingExceptionResponseContent": {
        "type": "object",
        "description": "The server response when usage plan or account-level throttling limits exceeded.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "UnauthorizedExceptionResponseContent": {
        "type": "object",
        "description": "The server response when the authorizer failed to authenticate the caller.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "UnknownOperationExceptionResponseContent": {
        "type": "object",
        "description": "The server response when the operation specified could not be found.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "UnmappedExceptionResponseContent": {
        "type": "object",
        "description": "The Stedi account has not been granted permission for this particular service.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "UnsupportedMediaTypeExceptionResponseContent": {
        "type": "object",
        "description": "The server response when a payload is of an unsupported media type.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Human readable exception message."
          },
          "code": {
            "type": "string",
            "description": "Classification of the exception type."
          }
        },
        "required": ["message"]
      },
      "UpdateFunctionRequestContent": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "package": {
            "type": "string",
            "maxLength": 3407872,
            "minLength": 1,
            "description": "The function code that has been packaged. Write-only. Limited to 3.25MB.",
            "format": "byte"
          },
          "packageRef": {
            "$ref": "#/components/schemas/PackageReference"
          },
          "timeout": {
            "type": "number",
            "maximum": 900,
            "minimum": 1,
            "description": "The amount of time (in seconds) that the runtime allows a function to run before stopping it. The default is 3 seconds."
          },
          "environmentVariables": {
            "$ref": "#/components/schemas/EnvironmentVariables"
          },
          "logRetention": {
            "$ref": "#/components/schemas/LogRetention"
          }
        }
      },
      "UpdateFunctionResponseContent": {
        "type": "object",
        "properties": {
          "functionName": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^([a-zA-Z0-9-_]+)$"
          },
          "code": {
            "type": "string"
          },
          "environmentVariables": {
            "$ref": "#/components/schemas/EnvironmentVariables"
          },
          "timeout": {
            "type": "number",
            "maximum": 900,
            "minimum": 1,
            "description": "The amount of time (in seconds) that the runtime allows a function to run before stopping it. The default is 3 seconds."
          },
          "logRetention": {
            "$ref": "#/components/schemas/LogRetention"
          },
          "createdAt": {
            "type": "string",
            "description": "The date and time when the resource was created."
          },
          "updatedAt": {
            "type": "string",
            "description": "The date and time when the resource was updated."
          }
        },
        "required": ["functionName"]
      },
      "ValidationExceptionField": {
        "type": "object",
        "description": "Describes one specific validation failure for an input member.",
        "properties": {
          "path": {
            "type": "string",
            "description": "A JSONPointer expression to the structure member whose value failed to satisfy the modeled constraints."
          },
          "message": {
            "type": "string",
            "description": "A detailed description of the validation failure."
          }
        },
        "required": ["message", "path"]
      },
      "ValidationExceptionResponseContent": {
        "type": "object",
        "description": "A standard error for input validation failures.\nThis should be thrown by services when a member of the input structure\nfalls outside of the modeled or documented constraints.",
        "properties": {
          "message": {
            "type": "string",
            "description": "A summary of the validation failure."
          },
          "fieldList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationExceptionField"
            },
            "description": "A list of specific failures encountered while validating the input.\nA member can appear in this list more than once if it failed to satisfy multiple constraints."
          }
        },
        "required": ["message"]
      }
    },
    "securitySchemes": {
      "smithy.api.httpApiKeyAuth": {
        "type": "http",
        "description": "API key authentication via the 'Authorization' header",
        "scheme": "Key"
      },
      "smithy.api.httpBearerAuth": {
        "type": "http",
        "description": "HTTP Bearer authentication",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "smithy.api.httpBearerAuth": []
    },
    {
      "smithy.api.httpApiKeyAuth": []
    }
  ],
  "x-amazon-apigateway-api-key-source": "AUTHORIZER",
  "x-amazon-apigateway-gateway-responses": {
    "DEFAULT_4XX": {
      "responseTemplates": {
        "application/json": "{\"message\":$context.error.messageString}"
      },
      "responseParameters": {
        "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
        "gatewayresponse.header.Access-Control-Expose-Headers": "'Date,X-Amzn-ErrorType,X-Stedi-FunctionName,X-Stedi-InvocationError,X-Stedi-InvocationId,X-Stedi-InvocationLogs,X-Stedi-OperationToken'"
      }
    },
    "DEFAULT_5XX": {
      "responseTemplates": {
        "application/json": "{\"message\":$context.error.messageString}"
      },
      "responseParameters": {
        "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
        "gatewayresponse.header.Access-Control-Expose-Headers": "'Date,X-Amzn-ErrorType,X-Stedi-FunctionName,X-Stedi-InvocationError,X-Stedi-InvocationId,X-Stedi-InvocationLogs,X-Stedi-OperationToken'"
      }
    }
  },
  "tags": [],
  "x-stedi": {
    "public": true
  },
  "servers": [
    {
      "url": "https://functions.cloud.us.stedi.com/2021-11-16",
      "description": "Production"
    },
    {
      "url": "https://functions.cloud.us.preproduction.stedi.com/2021-11-16",
      "description": "Pre-Production"
    }
  ]
}
